{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"m08IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCbFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SACuB,IAApBM,EAASC,OACN,mBAAG,UAAQ,oBAAX,6BACAD,EAASE,KAAI,SAAAT,GAAO,OACpB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQU,UCRVC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGX,UAAU,WAAWE,KAAI,iBAAYS,EAAKR,OAA7C,SACGQ,EAAKV,SCCGW,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGa,EAAKC,QAGR,8BACG,eAEAD,EAAKF,MAAQ,cAAC,EAAD,CAAUA,KAAME,EAAKF,aAIvC,mBAAGX,UAAU,iBAAb,SACGa,EAAKT,OAGR,cAAC,EAAD,CACEE,SAAUO,EAAKP,eCtBRS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKJ,U,qBCUX,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBO,EAYDL,EAAKK,OAXhBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MAC3C,MAWLZ,UARuBe,EAQGR,EAAKJ,GAPxBa,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,MAC1D,QAFP,IAAyBA,EALJH,KAgBRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CACEgB,MAAOA,QCxBbS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c0db8cdd.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.length === 0\n      ? <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      : comments.map(comment => (\n        <CommentInfo\n          comment={comment}\n          key={comment.id}\n        />\n      ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","\nimport './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {post.title}\n      </h3>\n\n      <p>\n        {' Posted by  '}\n\n        {post.user && <UserInfo user={post.user} />}\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <CommentList\n      comments={post.comments}\n    />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      posts={posts}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}